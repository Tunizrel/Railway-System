/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package railwaysystem;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class Booking extends javax.swing.JInternalFrame {
    Connection con; 
    PreparedStatement pst;
    private int businessPrice=650000;
    private int specialPrice=300000;
    private int generalPrice=155000;
    private int productPrice=100000;
    /**
     * Creates new form Booking
     */
    public Booking() {
        
        initComponents();
        autoID();
        updateSourceDesComboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        passengerID = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        sourceLocation = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        comboBox = new javax.swing.JComboBox<>();
        destinationLocation = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        numberOfSeat = new javax.swing.JSpinner();
        ticketID = new javax.swing.JTextField();
        price = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        trainID = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        trainTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        stopAtTable = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Your passenger ID");

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        sourceLocation.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Source");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Destination");

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Class");

        comboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "General", "Product", "Business", "Special" }));
        comboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxActionPerformed(evt);
            }
        });

        destinationLocation.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Number of seats");

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Price");

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Ticket ID");

        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        numberOfSeat.setModel(new javax.swing.SpinnerNumberModel(1, 1, 6, 1));
        numberOfSeat.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                numberOfSeatStateChanged(evt);
            }
        });

        jButton2.setText("Book");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Cancel");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel11.setBackground(new java.awt.Color(255, 255, 255));
        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Train ID");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(sourceLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboBox, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ticketID)
                            .addComponent(price)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 67, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3)
                                        .addComponent(destinationLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(numberOfSeat, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(trainID))))
                .addGap(31, 31, 31))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addGap(73, 73, 73))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sourceLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(destinationLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numberOfSeat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(trainID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(ticketID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addGap(21, 21, 21))
        );

        trainTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tid", "Brand", "Departure time ", "Arrival time", "Departure location", "Arrival location"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        trainTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                trainTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(trainTable);

        stopAtTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Train ID", "Stop at", "Time"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(stopAtTable);

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setText("Suitable trains");

        jLabel9.setText("Click a train to see its route at the table below and to book the ticket for that train");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel10.setText("Route");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(101, 101, 101)
                        .addComponent(jLabel1)
                        .addGap(50, 50, 50)
                        .addComponent(passengerID, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(67, 67, 67)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 704, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addContainerGap(404, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel8))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(passengerID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(10, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tableModel = (DefaultTableModel) trainTable.getModel();
        DefaultTableModel tableModel2 = (DefaultTableModel) stopAtTable.getModel();
        String searchSource = sourceLocation.getSelectedItem().toString();
        String searchDes = destinationLocation.getSelectedItem().toString();
        tableModel.setRowCount(0);
        tableModel2.setRowCount(0);
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  
            String connectionUrl = "jdbc:sqlserver://localhost:1433;encrypt=false;databaseName=RMSproject;user=sa;password=nasubi2002";
            Connection con = DriverManager.getConnection(connectionUrl);
            
            
            pst = con.prepareStatement(
                        "select Tid, Brand, Depart_time, Arrival_time, S1.Name as Depart, S2.Name as Arrive\n" +
                        "from Train, Station as S1, Station as S2 where\n" +
                        "Train.[DT.ID] = S1.Sid and Train.[A.ID] = S2.Sid\n" +
                        "AND\n" +
                        "Tid\n" +
                        "IN\n" +
                        "\n" +
                        "(select AA.Tid from \n" +
                        "(\n" +
                        "\n" +
                        "select * from\n" +
                        "(select Tid, Train.[DT.ID] as Sid, Depart_time as Time from Train\n" +
                        "UNION\n" +
                        "select Tid, Train.[A.ID] as Sid, Arrival_time as Time from Train\n" +
                        "UNION\n" +
                        "select Tid, Sid, Time from Stopat) as A\n" +
                        "where A.Sid in (select Sid from Station where Name =? OR Name =?)\n" +
                        "\n" +
                        ") as AA, \n" +
                        "(\n" +
                        "\n" +
                        "select * from\n" +
                        "(select Tid, Train.[DT.ID] as Sid, Depart_time as Time from Train\n" +
                        "UNION\n" +
                        "select Tid, Train.[A.ID] as Sid, Arrival_time as Time from Train\n" +
                        "UNION\n" +
                        "select Tid, Sid, Time from Stopat) as A\n" +
                        "where A.Sid in (select Sid from Station where Name =? OR Name =?)\n" +
                        "\n" +
                        ") as BB\n" +
                        "\n" +
                        "WHERE AA.Tid=BB.Tid \n" +
                        "and (AA.Sid in (select Sid from Station where Name  = ?)) \n" +
                        "and (BB.Sid in (select Sid from Station where Name = ?))\n" +
                        "and AA.Time < BB.Time\n" +
                        "\n" +
                        ")\n" +
                        ";");
            pst.setString(1,searchSource);
            pst.setString(2,searchDes);
            pst.setString(3, searchSource);
            pst.setString(4,searchDes);
            pst.setString(5,searchSource);
            pst.setString(6,searchDes);
            ResultSet rs = pst.executeQuery();
            
         
            while(rs.next()){
                String tid = rs.getString("Tid");
                String brand = rs.getString("Brand");
                
                String departureTime = rs.getString("Depart_time");
                String arrivalTime = rs.getString("Arrival_time");
                String source = rs.getString("Depart");
                String des = rs.getString("Arrive");
                
                String table[] = {tid,brand,departureTime,arrivalTime,source,des};
                
                
                tableModel.addRow(table);
            }
            
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(addPassenger.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(addPassenger.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    }//GEN-LAST:event_jButton1ActionPerformed

    private void trainTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_trainTableMouseClicked
        // TODO add your handling code here:
        DefaultTableModel df= (DefaultTableModel) trainTable.getModel();
        int selectIndex=trainTable.getSelectedRow();
        String tid = df.getValueAt(selectIndex, 0).toString();
        trainID.setText(tid.trim());
        //System.out.println(tid);
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  
            String connectionUrl = "jdbc:sqlserver://localhost:1433;encrypt=false;databaseName=RMSproject;user=sa;password=nasubi2002";
            Connection con = DriverManager.getConnection(connectionUrl);
            DefaultTableModel tableModel;
            
            pst = con.prepareStatement("select Train.Tid, Station.Name as Stop_at, Stopat.Time\n" +
                    "from Stopat, Station, Train\n" +
                    "where Stopat.Tid = Train.Tid and Station.Sid=Stopat.Sid and Train.Tid = ?;");
            pst.setString(1,tid);
            ResultSet rs = pst.executeQuery();
            
          
            while(rs.next()){
                
                String stopAt = rs.getString("Stop_at");
                String time = rs.getString("Time");
                
                String table[] = {tid,stopAt,time};
                
                tableModel = (DefaultTableModel) stopAtTable.getModel();
                tableModel.addRow(table);
            }
            
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(addPassenger.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(addPassenger.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_trainTableMouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        this.hide();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String ticketId = ticketID.getText();
        String pid = passengerID.getText();
        String tid = trainID.getText();
        String noSeat = Integer.toString((int)numberOfSeat.getValue());
        String ticketClass = comboBox.getSelectedItem().toString();
        int ticketPrice = Integer.valueOf(price.getText());
        
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  
            String connectionUrl = "jdbc:sqlserver://localhost:1433;encrypt=false;databaseName=RMSproject;user=sa;password=nasubi2002";
            con = DriverManager.getConnection(connectionUrl);
            pst = con.prepareStatement("insert into Booking(Bid,Class,Price,Seat_booked,Pid,Tid) values(?,?,?,?,?,?)");
            pst.setString(1,ticketId);
            pst.setString(2,ticketClass);
            pst.setInt(3,ticketPrice);
            pst.setString(4,noSeat);
            pst.setString(5,pid);
            pst.setString(6,tid);
           
            pst.executeUpdate();
            JOptionPane.showMessageDialog(null,"Successfully booked");
            
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(addEmployee.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(addEmployee.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void comboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxActionPerformed
        // TODO add your handling code here:
        String ticketClass  = comboBox.getSelectedItem().toString();
        int noSeat = (int) numberOfSeat.getValue();
        autoTicketID(ticketClass);
        int finalPrice=0;
        switch (ticketClass){
            case "General":
                finalPrice+=generalPrice * noSeat;
                break;
            case "Special":
                finalPrice+=specialPrice * noSeat;
                break;
            case "Business":
                finalPrice+=businessPrice * noSeat;
                break;
            case "Product":
                finalPrice+=productPrice * noSeat;
                break;
        }
        price.setText(Integer.toString(finalPrice).trim());
        
    }//GEN-LAST:event_comboBoxActionPerformed

    private void numberOfSeatStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_numberOfSeatStateChanged
        // TODO add your handling code here:
        String ticketClass  = comboBox.getSelectedItem().toString();
        int noSeat = (int) numberOfSeat.getValue();
        
        int finalPrice=0;
        switch (ticketClass){
            case "General":
                finalPrice+=generalPrice * noSeat;
                break;
            case "Special":
                finalPrice+=specialPrice * noSeat;
                break;
            case "Business":
                finalPrice+=businessPrice * noSeat;
                break;
            case "Product":
                finalPrice+=productPrice * noSeat;
                break;
        }
        price.setText(Integer.toString(finalPrice).trim());
    }//GEN-LAST:event_numberOfSeatStateChanged
    public void autoID() {
        
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  
            String connectionUrl = "jdbc:sqlserver://localhost:1433;encrypt=false;databaseName=RMSproject;user=sa;password=nasubi2002";
            con = DriverManager.getConnection(connectionUrl);
            
            pst = con.prepareStatement("select Uid from [User] where Username = ?");
            pst.setString(1,Login.user);
            
            ResultSet rs = pst.executeQuery();
            rs.next();
            String id = rs.getString("Uid");
            System.out.println(id);
            passengerID.setText(id);
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(addPassenger.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(addPassenger.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void updateSourceDesComboBox() {
         try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  
            String connectionUrl = "jdbc:sqlserver://localhost:1433;encrypt=false;databaseName=RMSproject;user=sa;password=nasubi2002";
            con = DriverManager.getConnection(connectionUrl);
            Statement stm = con.createStatement();
            
            
            ResultSet rs = stm.executeQuery("select Name from Station");
            
            while(rs.next()) {
                String name = rs.getString("Name");
                sourceLocation.addItem(name);
                destinationLocation.addItem(name);
            }
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(addPassenger.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(addPassenger.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public void autoTicketID(String ticketClass) {
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  
            String connectionUrl = "jdbc:sqlserver://localhost:1433;encrypt=false;databaseName=RMSproject;user=sa;password=nasubi2002";
            Connection con = DriverManager.getConnection(connectionUrl);
            
            
            Statement s = con.createStatement();
            ResultSet rs;
            rs = s.executeQuery("select (substring(Bid,4,7)) as Bid from Booking;");
            rs.next();
            rs.getString("Bid");
            
             
            int id;
            while(true) {
                boolean dupCheck=false;
                id = (int) (Math.random()*999999)+100000;
                while(rs.next()) {
                    int sampleId= Integer.parseInt(rs.getString("Bid"));
                    if (id == sampleId) {
                        dupCheck=true;
                        break;
                    }
                }
                if (dupCheck==false) {
                    break;
                }
            }

            ticketID.setText(ticketClass.charAt(0)+"C-"+ String.valueOf(id));
                
            
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(addPassenger.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(addPassenger.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> comboBox;
    private javax.swing.JComboBox<String> destinationLocation;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner numberOfSeat;
    private javax.swing.JTextField passengerID;
    private javax.swing.JTextField price;
    private javax.swing.JComboBox<String> sourceLocation;
    private javax.swing.JTable stopAtTable;
    private javax.swing.JTextField ticketID;
    private javax.swing.JTextField trainID;
    private javax.swing.JTable trainTable;
    // End of variables declaration//GEN-END:variables
}
