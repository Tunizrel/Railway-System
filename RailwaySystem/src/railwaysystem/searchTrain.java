/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package railwaysystem;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static railwaysystem.addTrain.stations;

/**
 *
 * @author Admin
 */
public class searchTrain extends javax.swing.JInternalFrame {

    /**
     * Creates new form addRoute
     */
    Connection con; 
    PreparedStatement pst;
    String tid, sid, name;
    public searchTrain() {
        initComponents();
        updateDepartSidComboBox();
        updateArriveSidComboBox();
        
        updateComboBox();
        addTrain.updateArrayListStations();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        trainBrand = new javax.swing.JTextField();
        trainNoSeat = new javax.swing.JTextField();
        trainArrivalTime = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        trainDepartureTime = new javax.swing.JTextField();
        coachIdComboBox = new javax.swing.JComboBox<>();
        departSidComboBox = new javax.swing.JComboBox<>();
        arriveSidComboBox = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        searchTrainId = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        stopAt = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        stopAtTable = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        updateTimeRoute = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        updateSidRouteTXT = new javax.swing.JTextField();
        updateLocationRouteTXT = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        route = new javax.swing.JTable();
        addTime = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Brand");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Number of seat");

        jLabel3.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Coach ID");

        jLabel4.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));

        jLabel5.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Time");

        trainBrand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trainBrandActionPerformed(evt);
            }
        });

        trainArrivalTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trainArrivalTimeActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Depart");

        jLabel8.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Arrive");

        trainDepartureTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trainDepartureTimeActionPerformed(evt);
            }
        });

        coachIdComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        coachIdComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coachIdComboBoxActionPerformed(evt);
            }
        });

        departSidComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        departSidComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                departSidComboBoxActionPerformed(evt);
            }
        });

        arriveSidComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        arriveSidComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arriveSidComboBoxActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Station ID");

        jButton1.setText("Update");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton4.setText("Remove");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(72, 72, 72)
                                .addComponent(trainArrivalTime, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(trainDepartureTime)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(departSidComboBox, 0, 165, Short.MAX_VALUE)
                            .addComponent(arriveSidComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(14, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(121, 121, 121)
                                .addComponent(jLabel5))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addComponent(jLabel2)
                                .addComponent(jLabel3)))
                        .addGap(37, 37, 37)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(trainNoSeat, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                            .addComponent(trainBrand, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                            .addComponent(coachIdComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(77, Short.MAX_VALUE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(129, 129, 129)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addGap(63, 63, 63))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap(327, Short.MAX_VALUE)
                    .addComponent(jLabel10)
                    .addGap(59, 59, 59)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(trainBrand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(trainNoSeat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(coachIdComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jLabel4))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jLabel5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(departSidComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(trainDepartureTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(trainArrivalTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(arriveSidComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton4))
                .addGap(25, 25, 25))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(162, 162, 162)
                    .addComponent(jLabel10)
                    .addContainerGap(164, Short.MAX_VALUE)))
        );

        jLabel6.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel6.setText("Train ID:");

        searchTrainId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTrainIdActionPerformed(evt);
            }
        });

        jButton3.setText("Search");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));

        stopAt.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        stopAt.setForeground(new java.awt.Color(255, 255, 255));
        stopAt.setText("Recent stop-at stations");

        stopAtTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sid", "Name", "Time"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        stopAtTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stopAtTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(stopAtTable);

        jLabel9.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Click a station to update");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(stopAt))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(111, 111, 111)
                        .addComponent(jLabel9)))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(stopAt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(70, Short.MAX_VALUE))
        );

        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(102, 102, 102));
        jPanel3.setForeground(new java.awt.Color(102, 102, 102));

        jLabel11.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Location");

        jLabel12.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Stop-at station info");

        jLabel13.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Time");

        jButton5.setText("Update Time");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel14.setText("You can only change the stop-at time");

        jLabel17.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Station ID");

        jButton7.setText("Remove");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel14)
                .addGap(77, 77, 77))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel13)
                            .addComponent(jLabel17))
                        .addGap(86, 86, 86)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(updateTimeRoute, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                            .addComponent(updateSidRouteTXT)
                            .addComponent(updateLocationRouteTXT)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jLabel12)))
                .addContainerGap(42, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(jButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton7)
                .addGap(80, 80, 80))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(updateSidRouteTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(75, 75, 75)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(updateLocationRouteTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(66, 66, 66)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateTimeRoute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addGap(27, 27, 27)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(jButton7))
                .addGap(32, 32, 32))
        );

        jPanel4.setBackground(new java.awt.Color(102, 102, 102));

        route.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sid", "Location"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        route.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                routeMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(route);

        jLabel16.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Add time");

        jButton6.setText("Add route");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Addd new route");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(addTime, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addGap(68, 68, 68))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jButton6)
                        .addGap(61, 61, 61))))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(141, 141, 141)
                .addComponent(jLabel15)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel15)
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton6)))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(212, 212, 212)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(135, 135, 135)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchTrainId, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3)))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(searchTrainId, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton3))
                    .addComponent(jLabel6))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(102, 102, 102))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void trainBrandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trainBrandActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_trainBrandActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tableModel = (DefaultTableModel) stopAtTable.getModel();
        tableModel.setRowCount(0);
        
        String tid = searchTrainId.getText();
        String brand = trainBrand.getText();
        String noSeat = trainNoSeat.getText();
        String coachID = coachIdComboBox.getSelectedItem().toString();
        String departureTime = trainDepartureTime.getText();
        String arrivalTime = trainArrivalTime.getText();
       
        String departureStationID =departSidComboBox.getSelectedItem().toString();
        
        String arrivalStationID = arriveSidComboBox.getSelectedItem().toString();
        
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  
            String connectionUrl = "jdbc:sqlserver://localhost:1433;encrypt=false;databaseName=RMSproject;user=sa;password=nasubi2002";
            con = DriverManager.getConnection(connectionUrl);
            pst = con.prepareStatement("update Train set Brand= ?,  Num_of_seat = ?,  [Coach.ID]=?,  Depart_time=?,  Arrival_time = ?, [DT.ID] =? , [A.ID] = ? where Tid = ?");
           
            pst.setString(1,brand);
            pst.setString(2,noSeat);
            pst.setString(3,coachID);
            pst.setString(4,departureTime );
            pst.setString(5, arrivalTime);
            pst.setString(6,departureStationID);
            pst.setString(7,arrivalStationID);
            pst.setString(8,tid);
            pst.executeUpdate();
            JOptionPane.showMessageDialog(null,"Updated!");
            
            String s2;
            String s1 ;
            if (stations.indexOf(arriveSidComboBox.getSelectedItem().toString())>stations.indexOf(departSidComboBox.getSelectedItem().toString())) {
            
            s1 = departSidComboBox.getSelectedItem().toString();
            s2= arriveSidComboBox.getSelectedItem().toString();
        } else {
            
            s2 = departSidComboBox.getSelectedItem().toString();
            s1= arriveSidComboBox.getSelectedItem().toString();
        }
            System.out.println(s1 +" " + s2);
            String stopAtStations="";
        for (int i = 0;i<addTrain.stations.size();i++) {
            if (i>addTrain.stations.indexOf(s1) && i<addTrain.stations.indexOf(s2)) {
                stopAtStations+= "'"+addTrain.stations.get(i)+"'";
                if (i==addTrain.stations.indexOf(s2)-1) break;
                stopAtStations+= ", ";             
            }
        }
            System.out.println(stopAtStations);
            System.out.println(stations);
            
            pst = con.prepareStatement("delete from Stopat where Tid = ? and Sid not in (?)");
            pst.setString(1,tid);
            pst.setString(2,stopAtStations);
            pst.executeUpdate();
            
            PreparedStatement s = con.prepareStatement("select Sid, Time from Stopat where Tid = ?");
            s.setString(1,tid);
            ResultSet rs1 = s.executeQuery();
            
            tableModel.setRowCount(0);
            
            while(rs1.next()){
                String stopAtSid = rs1.getString("Sid");
                String stopAtTime= rs1.getString("Time");
    
                String table[] = {stopAtSid,stopAtTime};
                tableModel.addRow(table);
            }
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(addPassenger.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(addPassenger.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.hide();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void trainArrivalTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trainArrivalTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_trainArrivalTimeActionPerformed

    private void trainDepartureTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trainDepartureTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_trainDepartureTimeActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tableModel = (DefaultTableModel) stopAtTable.getModel();
        tableModel.setRowCount(0);
        String tid = searchTrainId.getText();
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  
            String connectionUrl = "jdbc:sqlserver://localhost:1433;encrypt=false;databaseName=RMSproject;user=sa;password=nasubi2002";
            con = DriverManager.getConnection(connectionUrl);
            
            
            pst = con.prepareStatement("select Brand, Num_of_seat, [Coach.ID], CONVERT(VARCHAR(5),Depart_time,108) as Depart_time,CONVERT(VARCHAR(5),Arrival_time,108) as Arrival_time,[DT.ID],[A.ID] from Train where Tid = ?");
            pst.setString(1,tid);
            ResultSet rs = pst.executeQuery();
            
            if(rs.next() == false ) {
                JOptionPane.showMessageDialog(this, "Not found");
            } else {
                String brand = rs.getString("Brand");
                String noSeat = rs.getString("Num_of_seat");
                String coachId =rs.getString("Coach.ID");
                String departureTime = rs.getString("Depart_time");
                String arrivalTime = rs.getString("Arrival_time");
                String departureStationId = rs.getString("DT.ID");
                String arrivalStationId = rs.getString("A.ID");

             
               //displaying...
               trainBrand.setText(brand.trim());
               trainNoSeat.setText(noSeat.trim());
               coachIdComboBox.getModel().setSelectedItem(coachId);
               trainDepartureTime.setText(departureTime.trim());
               trainArrivalTime.setText(arrivalTime.trim());
               departSidComboBox.setSelectedItem(departureStationId.trim());
               arriveSidComboBox.setSelectedItem(arrivalStationId.trim());
            }
            
            PreparedStatement s = con.prepareStatement("select Stopat.Sid as Sid, CONVERT(VARCHAR(5),Time,108) as Time, Station.Name as Name from Stopat, Station where Stopat.Sid = Station.Sid and Tid = ? order by Time ASC");
            s.setString(1,tid);
            ResultSet rs1 = s.executeQuery();
            
            while(rs1.next()){
                String stopAtSid = rs1.getString("Sid");
                String stopAtTime= rs1.getString("Time");
                String stopAtName = rs1.getString("Name");
                
                String table[] = {stopAtSid,stopAtName,stopAtTime};
                
                
                tableModel.addRow(table);
            }
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(searchPassenger.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(searchPassenger.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void searchTrainIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTrainIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchTrainIdActionPerformed

    private void coachIdComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coachIdComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_coachIdComboBoxActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        String tid = searchTrainId.getText();
        String eid = coachIdComboBox.getSelectedItem().toString();
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  
            String connectionUrl = "jdbc:sqlserver://localhost:1433;encrypt=false;databaseName=RMSproject;user=sa;password=nasubi2002";
            con = DriverManager.getConnection(connectionUrl);
            
            pst = con.prepareStatement("update Employee set Tid = null where Eid = ?");
            pst.setString(1,eid);
            pst.executeUpdate();
            
            pst = con.prepareStatement("Delete from Stopat Where Tid = ?");
            pst.setString(1,tid);
            pst.executeUpdate();
            
            pst = con.prepareStatement("Delete from Train Where Tid = ?");
            pst.setString(1,tid);
            pst.executeUpdate();
            
            
            
            JOptionPane.showMessageDialog(null, "Removed!");
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(searchEmployee.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(searchEmployee.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void stopAtTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stopAtTableMouseClicked
        // TODO add your handling code here:
        DefaultTableModel tableModel = (DefaultTableModel) stopAtTable.getModel();
    
    
        
        int selectIndex=stopAtTable.getSelectedRow();
        String tid = searchTrainId.getText();
        
        String sid = tableModel.getValueAt(selectIndex, 0).toString();
        System.out.println(sid);
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  
            String connectionUrl = "jdbc:sqlserver://localhost:1433;encrypt=false;databaseName=RMSproject;user=sa;password=nasubi2002";
            Connection con = DriverManager.getConnection(connectionUrl);
            
            
            pst = con.prepareStatement("select CONVERT(VARCHAR(5),Time,108) as Time, Stopat.Sid, Name from Stopat, Station where Stopat.Sid = Station.Sid and Stopat.Sid= ? and Stopat.Tid = ?");
            pst.setString(1,sid);
            pst.setString(2,tid);
            ResultSet rs = pst.executeQuery();
            rs.next();
            String location = rs.getString("Name");
            String time = rs.getString("Time");
            
            updateTimeRoute.setText(time.trim());
            updateLocationRouteTXT.setText(location.trim());
            updateSidRouteTXT.setText(sid.trim());
            
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(addPassenger.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(addPassenger.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_stopAtTableMouseClicked

    private void departSidComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_departSidComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_departSidComboBoxActionPerformed

    private void routeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_routeMouseClicked
        // TODO add your handling code here:
        int selectIndex=route.getSelectedRow();
         sid = route.getValueAt(selectIndex, 0).toString();
         tid = searchTrainId.getText();
         

    }//GEN-LAST:event_routeMouseClicked

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        
        String time = addTime.getText();
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String connectionUrl = "jdbc:sqlserver://localhost:1433;encrypt=false;databaseName=RMSproject;user=sa;password=nasubi2002";
            con = DriverManager.getConnection(connectionUrl);
            pst = con.prepareStatement("insert into Stopat(Time,Tid,Sid) values(?,?,?)");

            pst.setString(1,time);
            pst.setString(2, tid);
            pst.setString(3,sid);
            pst.executeUpdate();
            
            JOptionPane.showMessageDialog(null,"New route added for this train!");
            
            DefaultTableModel tableModel = (DefaultTableModel) stopAtTable.getModel();
            tableModel.setRowCount(0);
            
            PreparedStatement s = con.prepareStatement("select Stopat.Sid as Sid, CONVERT(VARCHAR(5),Time,108) as Time, Station.Name as Name from Stopat, Station where Stopat.Sid = Station.Sid and Tid = ? order by Time ASC");
            s.setString(1,tid);
            ResultSet rs1 = s.executeQuery();
            
            while(rs1.next()){
                String stopAtSid = rs1.getString("Sid");
                String stopAtTime= rs1.getString("Time");
                String stopAtName = rs1.getString("Name");
                
                String table[] = {stopAtSid,stopAtName,stopAtTime};
                
                
                tableModel.addRow(table);
            }
            
            updateAddRouteTable();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(addEmployee.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(addEmployee.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        
        
        
        String tid = searchTrainId.getText();
        String sid = updateSidRouteTXT.getText();
        
        String time = updateTimeRoute.getText();
        
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  
            String connectionUrl = "jdbc:sqlserver://localhost:1433;encrypt=false;databaseName=RMSproject;user=sa;password=nasubi2002";
            con = DriverManager.getConnection(connectionUrl);
            pst = con.prepareStatement("update Stopat set Time = ? where Tid= ? and  Sid = ? ");
            
            pst.setString(1,time);
            pst.setString(3,sid);
            pst.setString(2,tid);
            pst.executeUpdate();
            
            JOptionPane.showMessageDialog(null,"Updated!");
            
            DefaultTableModel tableModel = (DefaultTableModel) stopAtTable.getModel();
            tableModel.setRowCount(0);
            
            PreparedStatement s = con.prepareStatement("select Stopat.Sid as Sid, CONVERT(VARCHAR(5),Time,108) as Time, Station.Name as Name from Stopat, Station where Stopat.Sid = Station.Sid and Tid = ? order by Time ASC");
            s.setString(1,tid);
            ResultSet rs1 = s.executeQuery();
            
            while(rs1.next()){
                String stopAtSid = rs1.getString("Sid");
                String stopAtTime= rs1.getString("Time");
                String stopAtName = rs1.getString("Name");
                
                String table[] = {stopAtSid,stopAtName,stopAtTime};
                
                
                tableModel.addRow(table);
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(addPassenger.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(addPassenger.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton5ActionPerformed
    private void updateAddRouteTable() {
        String tid = searchTrainId.getText();
        ArrayList<String> stopAtSids = new ArrayList<String>();
        DefaultTableModel tableModel = (DefaultTableModel) route.getModel();
        tableModel.setRowCount(0);
        String s2;
        String s1 ;
        String order="";
        if (stations.indexOf(arriveSidComboBox.getSelectedItem().toString())>stations.indexOf(departSidComboBox.getSelectedItem().toString())) {
            System.out.println("haha");
            s1 = departSidComboBox.getSelectedItem().toString();
            s2= arriveSidComboBox.getSelectedItem().toString();
            order = "order by Sid DESC";
        } else {
            Collections.reverse(stations);
            System.out.println("huhu");
            s2 = departSidComboBox.getSelectedItem().toString();
            s1= arriveSidComboBox.getSelectedItem().toString();
        }
        String stopAtStations="";
        for (int i = 0;i<stations.size();i++) {
            if (i>stations.indexOf(s1) && i<stations.indexOf(s2)) {
                stopAtStations+= "'"+stations.get(i)+"'";
                if (i==stations.indexOf(s2)-1) break;
                stopAtStations+= ", ";             
            }
        }
        System.out.println(stopAtStations);
        
        
        
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  
            String connectionUrl = "jdbc:sqlserver://localhost:1433;encrypt=false;databaseName=RMSproject;user=sa;password=nasubi2002";
            con = DriverManager.getConnection(connectionUrl);
            
            PreparedStatement s = con.prepareStatement("select Stopat.Sid as Sid, CONVERT(VARCHAR(5),Time,108) as Time, Station.Name as Name from Stopat, Station where Stopat.Sid = Station.Sid and Tid = ? order by Time ASC");
            s.setString(1,tid);
            ResultSet rs1 = s.executeQuery();
            String stopAtSidsString="";
            while(rs1.next()){
                stopAtSids.add(rs1.getString("Sid"));
                
            }
            
            for (int i =0;i<stopAtSids.size();i++) {
                stopAtSidsString+="'"+stopAtSids.get(i)+"'";
                if (i==stopAtSids.size()-1) break;
                stopAtSidsString+= ", ";
            }
            
            System.out.println(stopAtSidsString);
            
            Statement stm = con.createStatement();
            ResultSet rs2 = stm.executeQuery("select Sid, Name from Station where Sid in (" + stopAtStations +") and Sid not in (" + stopAtSidsString + ") " + order + " ;");
         
 
            while(rs2.next()){
                
                String stopAt = rs2.getString("Sid");
                String name = rs2.getString("Name");           
                
                String table[] = {stopAt,name};
                
                
                tableModel.addRow(table);
            
            }
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(searchStation.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(searchStation.class.getName()).log(Level.SEVERE, null, ex);
        }
    }                                                 
    
    
    private void arriveSidComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arriveSidComboBoxActionPerformed
        // TODO add your handling code here:
        updateAddRouteTable();
    }//GEN-LAST:event_arriveSidComboBoxActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        String sid = updateSidRouteTXT.getText();
        String tid = searchTrainId.getText();
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  
            String connectionUrl = "jdbc:sqlserver://localhost:1433;encrypt=false;databaseName=RMSproject;user=sa;password=nasubi2002";
            con = DriverManager.getConnection(connectionUrl);
            PreparedStatement stm = con.prepareStatement("delete from Stopat where Tid= ? and Sid = ?");
            stm.setString(1,tid);
            stm.setString(2,sid);
            stm.executeUpdate();
            
        DefaultTableModel tableModel = (DefaultTableModel) stopAtTable.getModel();
            tableModel.setRowCount(0);
            
            PreparedStatement s = con.prepareStatement("select Stopat.Sid as Sid, CONVERT(VARCHAR(5),Time,108) as Time, Station.Name as Name from Stopat, Station where Stopat.Sid = Station.Sid and Tid = ? order by Time ASC");
            s.setString(1,tid);
            ResultSet rs1 = s.executeQuery();
            
            while(rs1.next()){
                String stopAtSid = rs1.getString("Sid");
                String stopAtTime= rs1.getString("Time");
                String stopAtName = rs1.getString("Name");
                
                String table[] = {stopAtSid,stopAtName,stopAtTime};
                
                
                tableModel.addRow(table);
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(addPassenger.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(addPassenger.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton7ActionPerformed
    /*private void updateLocationComboBox() {
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  
            String connectionUrl = "jdbc:sqlserver://localhost:1433;encrypt=false;databaseName=RMSproject;user=sa;password=nasubi2002";
            con = DriverManager.getConnection(connectionUrl);
            Statement stm = con.createStatement();
            
            
            ResultSet rs = stm.executeQuery("select Name from Station");
            
            while(rs.next()) {
                String name = rs.getString("Name");
                updateLocationRoute.addItem(name);
            }
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(addPassenger.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(addPassenger.class.getName()).log(Level.SEVERE, null, ex);
        }
    }*/
    
    private void updateComboBox() {
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  
            String connectionUrl = "jdbc:sqlserver://localhost:1433;encrypt=false;databaseName=RMSproject;user=sa;password=nasubi2002";
            con = DriverManager.getConnection(connectionUrl);
            Statement stm = con.createStatement();
            
            
            ResultSet rs = stm.executeQuery("select Eid from Employee");
            
            while(rs.next()) {
                String eid = rs.getString("Eid");
                coachIdComboBox.addItem(eid);
            }
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(addPassenger.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(addPassenger.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public void updateSidRoute() {
        
    }
    
    public void updateDepartSidComboBox() {
         try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  
            String connectionUrl = "jdbc:sqlserver://localhost:1433;encrypt=false;databaseName=RMSproject;user=sa;password=nasubi2002";
            con = DriverManager.getConnection(connectionUrl);
            Statement stm = con.createStatement();
            
            
            ResultSet rs = stm.executeQuery("select Sid from Station");
            
            while(rs.next()) {
                String sid = rs.getString("Sid");
                departSidComboBox.addItem(sid);
                
            }
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(addPassenger.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(addPassenger.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void updateArriveSidComboBox() {
         try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  
            String connectionUrl = "jdbc:sqlserver://localhost:1433;encrypt=false;databaseName=RMSproject;user=sa;password=nasubi2002";
            con = DriverManager.getConnection(connectionUrl);
            Statement stm = con.createStatement();
            
            
            ResultSet rs = stm.executeQuery("select Sid from Station");
            
            while(rs.next()) {
                String sid = rs.getString("Sid");
                arriveSidComboBox.addItem(sid);
            }
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(addPassenger.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(addPassenger.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    /*public void updateSidRouteComboBox() {
        ArrayList<String> stopAtSids = new ArrayList<String>();
        String tid = searchTrainId.getText();
        String s2;
        String s1 ;
        if (stations.indexOf(arriveSidComboBox.getSelectedItem().toString())>stations.indexOf(departSidComboBox.getSelectedItem().toString())) {
            System.out.println("haha");
            s1 = departSidComboBox.getSelectedItem().toString();
            s2= arriveSidComboBox.getSelectedItem().toString();
        } else {
            //Collections.reverse(stations);
            System.out.println("huhu");
            s2 = departSidComboBox.getSelectedItem().toString();
            s1= arriveSidComboBox.getSelectedItem().toString();
        }
        String stopAtStations="";
        for (int i = 0;i<stations.size();i++) {
            if (i>stations.indexOf(s1) && i<stations.indexOf(s2)) {
                stopAtStations+= "'"+stations.get(i)+"'";
                if (i==stations.indexOf(s2)-1) break;
                stopAtStations+= ", ";             
            }
        }
        System.out.println(s1+" " + s2);
       
        System.out.println(stopAtStations);
         try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  
            String connectionUrl = "jdbc:sqlserver://localhost:1433;encrypt=false;databaseName=RMSproject;user=sa;password=nasubi2002";
            con = DriverManager.getConnection(connectionUrl); 
            
            PreparedStatement s = con.prepareStatement("select Stopat.Sid as Sid, CONVERT(VARCHAR(5),Time,108) as Time, Station.Name as Name from Stopat, Station where Stopat.Sid = Station.Sid and Tid = ? order by Time ASC");
            s.setString(1,tid);
            ResultSet rs1 = s.executeQuery();
            String stopAtSidsString="";
            while(rs1.next()){
                stopAtSids.add(rs1.getString("Sid"));
                
            }
            
            for (int i =0;i<stopAtSids.size();i++) {
                stopAtSidsString+="'"+stopAtSids.get(i)+"'";
                if (i==stopAtSids.size()-1) break;
                stopAtSidsString+= ", ";
            }
            
            System.out.println(stopAtSidsString);
            
            Statement stm = con.createStatement();
            ResultSet rs2 = stm.executeQuery("select Sid, Name from Station where Sid in (" + stopAtStations +") and Sid not in (" + stopAtSidsString + ")");
            
            while(rs2.next()) {
                String sid = rs2.getString("Sid");
                String name = rs2.getString("Name");
                updateSidRoute.addItem(sid);
                updateLocationRoute.addItem(name);
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(addPassenger.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(addPassenger.class.getName()).log(Level.SEVERE, null, ex);
        }
    }*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addTime;
    private javax.swing.JComboBox<String> arriveSidComboBox;
    private javax.swing.JComboBox<String> coachIdComboBox;
    private javax.swing.JComboBox<String> departSidComboBox;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable route;
    private javax.swing.JTextField searchTrainId;
    private javax.swing.JLabel stopAt;
    private javax.swing.JTable stopAtTable;
    private javax.swing.JTextField trainArrivalTime;
    private javax.swing.JTextField trainBrand;
    private javax.swing.JTextField trainDepartureTime;
    private javax.swing.JTextField trainNoSeat;
    private javax.swing.JTextField updateLocationRouteTXT;
    private javax.swing.JTextField updateSidRouteTXT;
    private javax.swing.JTextField updateTimeRoute;
    // End of variables declaration//GEN-END:variables
}
