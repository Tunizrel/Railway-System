/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package railwaysystem;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class addTrain extends javax.swing.JInternalFrame {

    /**
     * Creates new form addRoute
     */
    Connection con; 
    PreparedStatement pst;
    String brand;
    public static ArrayList<String> stations = new ArrayList<String>();
    String tid, sid, name;
    public static void updateArrayListStations() {
        stations.add("VN9192");
        stations.add("VN9400");
        stations.add("VN8283");
        stations.add("VN7074");
        stations.add("VN7800");
        stations.add("VN6162");
        stations.add("VN5354");
        stations.add("VN5152");
        stations.add("VN5000");
        stations.add("VN4546");
        stations.add("VN4042");
        stations.add("VN1014");
        stations.add("VN0102");
        stations.add("VN2100");
    }
    
    
    public addTrain() {
        initComponents();
        updateDepartSidComboBox();
        updateArriveSidComboBox();
        updateCoachIdComboBox();
        updateArrayListStations();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        trainBrand = new javax.swing.JTextField();
        trainNoSeat = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        trainArrivalTime = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        trainDepartureTime = new javax.swing.JTextField();
        coachIdComboBox = new javax.swing.JComboBox<>();
        departSid = new javax.swing.JComboBox<>();
        arriveSid = new javax.swing.JComboBox<>();
        trainID = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jToggleButton1 = new javax.swing.JToggleButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        route = new javax.swing.JTable();
        addTime = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Brand");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Number of seat");

        jLabel3.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Coach ID");

        jLabel4.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));

        jLabel5.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Time");

        trainBrand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trainBrandActionPerformed(evt);
            }
        });

        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        trainArrivalTime.setText("HH:MM");
        trainArrivalTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trainArrivalTimeActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Depart");

        jLabel8.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Arrive");

        jLabel9.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Station ID");

        trainDepartureTime.setText("HH:MM");
        trainDepartureTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trainDepartureTimeActionPerformed(evt);
            }
        });

        coachIdComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        coachIdComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coachIdComboBoxActionPerformed(evt);
            }
        });

        departSid.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        departSid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                departSidActionPerformed(evt);
            }
        });

        arriveSid.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        arriveSid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arriveSidActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Train ID");

        jToggleButton1.setText("Get ID");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel8)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(trainDepartureTime))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(72, 72, 72)
                                .addComponent(trainArrivalTime, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(36, 36, 36)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(76, 76, 76)
                                .addComponent(jButton2))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(departSid, 0, 174, Short.MAX_VALUE)
                                    .addComponent(arriveSid, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(121, 121, 121)
                                .addComponent(jLabel5))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addComponent(jLabel2)
                                .addComponent(jLabel3)
                                .addComponent(jLabel10)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(coachIdComboBox, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(trainNoSeat, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(trainID, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jToggleButton1)
                                        .addGap(0, 2, Short.MAX_VALUE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(trainBrand, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addGap(46, 46, 46)))))))
                .addGap(34, 34, 34))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(trainBrand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(trainID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(jToggleButton1))
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(trainNoSeat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(coachIdComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jLabel4))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel9))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(departSid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(trainDepartureTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(trainArrivalTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arriveSid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(19, 19, 19))
        );

        jLabel6.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel6.setText("New Train");

        jLabel11.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel11.setText("Route");

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));

        route.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sid", "Location"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        route.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                routeMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(route);

        jLabel12.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Add time");

        jButton3.setText("Add route");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel13.setText("If you want to add many stop-at stations");

        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel14.setText("please follow the order top-to-bottom in the table above");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(11, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(52, 52, 52)
                        .addComponent(addTime, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addContainerGap())
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addContainerGap()))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addGap(136, 136, 136))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(86, 86, 86))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addGap(18, 18, 18)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addGap(26, 26, 26))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(211, 211, 211)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addGap(197, 197, 197))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(7, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void trainBrandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trainBrandActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_trainBrandActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        brand = trainBrand.getText(); 
        String noSeat = trainNoSeat.getText();
        String coachID = coachIdComboBox.getSelectedItem().toString();
        String departureTime = trainDepartureTime.getText();
        String arrivalTime = trainArrivalTime.getText();
       
        String departureStationID =departSid.getSelectedItem().toString();
        
        String arrivalStationID = arriveSid.getSelectedItem().toString();
        
       
        
        
        String tid = trainID.getText();
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  
            String connectionUrl = "jdbc:sqlserver://localhost:1433;encrypt=false;databaseName=RMSproject;user=sa;password=nasubi2002";
            con = DriverManager.getConnection(connectionUrl);
            pst = con.prepareStatement("insert into Train(Tid,Brand,Num_of_seat,[Coach.ID],Depart_time,Arrival_time,[DT.ID],[A.ID]) values(?,?,?,?,?,?,?,?)");
            pst.setString(1,tid);
            pst.setString(2,brand);
            pst.setString(3,noSeat);
            pst.setString(4,coachID);
            pst.setString(5,departureTime );
            pst.setString(6, arrivalTime);
            pst.setString(7,departureStationID);
            pst.setString(8,arrivalStationID);
            pst.executeUpdate();
            
            pst = con.prepareStatement("update Employee set Tid = ? where Eid = ?");
            pst.setString(1,tid);
            pst.setString(2,coachID);
            pst.executeUpdate();
            
        
            JOptionPane.showMessageDialog(null,"New train added");
            
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(addPassenger.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(addPassenger.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        

    }//GEN-LAST:event_jButton1ActionPerformed
    
    public void autoID(String shortBrand) {
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  
            String connectionUrl = "jdbc:sqlserver://localhost:1433;encrypt=false;databaseName=RMSproject;user=sa;password=nasubi2002";
            Connection con = DriverManager.getConnection(connectionUrl);
            
            
            Statement s = con.createStatement();
            ResultSet rs;
            rs = s.executeQuery("select dbo.getNumericValue(Tid) as tid from Train;");
            rs.next();
            rs.getString("tid");
            
                
                int id;
                while(true) {
                    boolean dupCheck=false;
                    id = (int) (Math.random()*9999)+1;
                    while(rs.next()) {
                        int sampleId= Integer.parseInt(rs.getString("tid"));
                        if (id == sampleId) {
                            dupCheck=true;
                            break;
                        }
                    }
                    if (dupCheck==false) {
                        break;
                    }
                }
              
                trainID.setText(shortBrand+ String.valueOf(id));
                
            
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(addPassenger.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(addPassenger.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.hide();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void trainArrivalTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trainArrivalTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_trainArrivalTimeActionPerformed

    private void trainDepartureTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trainDepartureTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_trainDepartureTimeActionPerformed

    private void coachIdComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coachIdComboBoxActionPerformed
        // TODO add your handling code here:
     
    }//GEN-LAST:event_coachIdComboBoxActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        // TODO add your handling code here:
        brand = trainBrand.getText();
        String shortBrand ="";
        shortBrand+=brand.charAt(0);
        for (int i=1;i<brand.length();i++) {
            if(brand.charAt(i)==' ') {
                shortBrand+=brand.charAt(i+1);
            }
        }
        autoID(shortBrand.toUpperCase());
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void arriveSidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arriveSidActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tableModel = (DefaultTableModel) route.getModel();
        tableModel.setRowCount(0);
        String s2;
        String s1 ;
        String order="";
        if (stations.indexOf(arriveSid.getSelectedItem().toString())>stations.indexOf(departSid.getSelectedItem().toString())) {
            System.out.println("haha");
            s1 = departSid.getSelectedItem().toString();
            s2= arriveSid.getSelectedItem().toString();
            order = "order by Sid DESC";
        } else {
            Collections.reverse(stations);
            System.out.println("huhu");
            s2 = departSid.getSelectedItem().toString();
            s1= arriveSid.getSelectedItem().toString();
        }
        String stopAtStations="";
        for (int i = 0;i<stations.size();i++) {
            if (i>stations.indexOf(s1) && i<stations.indexOf(s2)) {
                stopAtStations+= "'"+stations.get(i)+"'";
                if (i==stations.indexOf(s2)-1) break;
                stopAtStations+= ", ";             
            }
        }
        System.out.println(stopAtStations);
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  
            String connectionUrl = "jdbc:sqlserver://localhost:1433;encrypt=false;databaseName=RMSproject;user=sa;password=nasubi2002";
            con = DriverManager.getConnection(connectionUrl);
            
            Statement s = con.createStatement();
            ResultSet rs = s.executeQuery("select Sid, Name from Station where Sid IN "+"("+stopAtStations+") " + order +" ;");
            
            
            
            while(rs.next()){
                
                String stopAt = rs.getString("Sid");
                String name = rs.getString("Name");           
                
                String table[] = {stopAt,name};
                
                
                tableModel.addRow(table);
            
            }
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(searchStation.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(searchStation.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_arriveSidActionPerformed

    private void routeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_routeMouseClicked
        // TODO add your handling code here:
         int selectIndex=route.getSelectedRow();
         sid = route.getValueAt(selectIndex, 0).toString();
         tid = trainID.getText();
         
         
    }//GEN-LAST:event_routeMouseClicked
    
    private void updateAddRouteTable() {
        String tid = trainID.getText();
        ArrayList<String> stopAtSids = new ArrayList<String>();
        DefaultTableModel tableModel = (DefaultTableModel) route.getModel();
        tableModel.setRowCount(0);
        String s2;
        String s1 ;
        String order="";
        if (stations.indexOf(arriveSid.getSelectedItem().toString())>stations.indexOf(departSid.getSelectedItem().toString())) {
            System.out.println("haha");
            s1 = departSid.getSelectedItem().toString();
            s2= arriveSid.getSelectedItem().toString();
            order = "order by Sid DESC";
        } else {
            Collections.reverse(stations);
            System.out.println("huhu");
            s2 = departSid.getSelectedItem().toString();
            s1= arriveSid.getSelectedItem().toString();
        }
        String stopAtStations="";
        for (int i = 0;i<stations.size();i++) {
            if (i>stations.indexOf(s1) && i<stations.indexOf(s2)) {
                stopAtStations+= "'"+stations.get(i)+"'";
                if (i==stations.indexOf(s2)-1) break;
                stopAtStations+= ", ";             
            }
        }
        System.out.println(stopAtStations);
        
        
        
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  
            String connectionUrl = "jdbc:sqlserver://localhost:1433;encrypt=false;databaseName=RMSproject;user=sa;password=nasubi2002";
            con = DriverManager.getConnection(connectionUrl);
            
            PreparedStatement s = con.prepareStatement("select Stopat.Sid as Sid, CONVERT(VARCHAR(5),Time,108) as Time, Station.Name as Name from Stopat, Station where Stopat.Sid = Station.Sid and Tid = ? order by Time ASC");
            s.setString(1,tid);
            ResultSet rs1 = s.executeQuery();
            String stopAtSidsString="";
            while(rs1.next()){
                stopAtSids.add(rs1.getString("Sid"));
                
            }
            
            for (int i =0;i<stopAtSids.size();i++) {
                stopAtSidsString+="'"+stopAtSids.get(i)+"'";
                if (i==stopAtSids.size()-1) break;
                stopAtSidsString+= ", ";
            }
            
            System.out.println(stopAtSidsString);
            
            Statement stm = con.createStatement();
            ResultSet rs2 = stm.executeQuery("select Sid, Name from Station where Sid in (" + stopAtStations +") and Sid not in (" + stopAtSidsString + ") " + order + " ;");
         
 
            while(rs2.next()){
                
                String stopAt = rs2.getString("Sid");
                String name = rs2.getString("Name");           
                
                String table[] = {stopAt,name};
                
                
                tableModel.addRow(table);
            
            }
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(searchStation.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(searchStation.class.getName()).log(Level.SEVERE, null, ex);
        }
    }                                    
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        String time = addTime.getText();
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  
            String connectionUrl = "jdbc:sqlserver://localhost:1433;encrypt=false;databaseName=RMSproject;user=sa;password=nasubi2002";
            con = DriverManager.getConnection(connectionUrl);
            pst = con.prepareStatement("insert into Stopat(Time,Tid,Sid) values(?,?,?)");
            
            pst.setString(1,time);
            pst.setString(2, tid);
            pst.setString(3,sid);
            pst.executeUpdate();
            JOptionPane.showMessageDialog(null,"New route added for this train!");
            updateAddRouteTable();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(addEmployee.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(addEmployee.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void departSidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_departSidActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tableModel = (DefaultTableModel) route.getModel();
        tableModel.setRowCount(0);
        String s2;
        String s1 ;
        if (stations.indexOf(arriveSid.getSelectedItem().toString())>stations.indexOf(departSid.getSelectedItem().toString())) {
            System.out.println("haha");
            s1 = departSid.getSelectedItem().toString();
            s2= arriveSid.getSelectedItem().toString();
        } else {
            System.out.println("huhu");
            s2 = departSid.getSelectedItem().toString();
            s1= arriveSid.getSelectedItem().toString();
        }
        String stopAtStations="";
        for (int i = 0;i<stations.size();i++) {
            if (i>stations.indexOf(s1) && i<stations.indexOf(s2)) {
                stopAtStations+= "'"+stations.get(i)+"'";
                if (i==stations.indexOf(s2)-1) break;
                stopAtStations+= ", ";             
            }
        }
        System.out.println(stopAtStations);
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  
            String connectionUrl = "jdbc:sqlserver://localhost:1433;encrypt=false;databaseName=RMSproject;user=sa;password=nasubi2002";
            con = DriverManager.getConnection(connectionUrl);
            
            Statement s = con.createStatement();
            ResultSet rs = s.executeQuery("select Sid, Name from Station where Sid IN "+"("+stopAtStations+");");
            
            
            
            while(rs.next()){
                
                String stopAt = rs.getString("Sid");
                String name = rs.getString("Name");           
                
                String table[] = {stopAt,name};
                
                
                tableModel.addRow(table);
            
            }
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(searchStation.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(searchStation.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_departSidActionPerformed
    public void updateDepartSidComboBox() {
         try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  
            String connectionUrl = "jdbc:sqlserver://localhost:1433;encrypt=false;databaseName=RMSproject;user=sa;password=nasubi2002";
            con = DriverManager.getConnection(connectionUrl);
            Statement stm = con.createStatement();
            
            
            ResultSet rs = stm.executeQuery("select Sid from Station");
            
            while(rs.next()) {
                String sid = rs.getString("Sid");
                departSid.addItem(sid);
            }
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(addPassenger.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(addPassenger.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void updateArriveSidComboBox() {
         try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  
            String connectionUrl = "jdbc:sqlserver://localhost:1433;encrypt=false;databaseName=RMSproject;user=sa;password=nasubi2002";
            con = DriverManager.getConnection(connectionUrl);
            Statement stm = con.createStatement();
            
            
            ResultSet rs = stm.executeQuery("select Sid from Station");
            
            while(rs.next()) {
                String sid = rs.getString("Sid");
                arriveSid.addItem(sid);
            }
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(addPassenger.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(addPassenger.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void updateCoachIdComboBox() {
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  
            String connectionUrl = "jdbc:sqlserver://localhost:1433;encrypt=false;databaseName=RMSproject;user=sa;password=nasubi2002";
            con = DriverManager.getConnection(connectionUrl);
            Statement stm = con.createStatement();
            
            
            ResultSet rs = stm.executeQuery("select Eid from Employee where Eid not in (select [Coach.ID] from Train) and SUBSTRING(Eid,1,1) <> 'M';");
            
            while(rs.next()) {
                String eid = rs.getString("Eid");
                coachIdComboBox.addItem(eid);
            }
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(addPassenger.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(addPassenger.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addTime;
    private javax.swing.JComboBox<String> arriveSid;
    private javax.swing.JComboBox<String> coachIdComboBox;
    private javax.swing.JComboBox<String> departSid;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JTable route;
    private javax.swing.JTextField trainArrivalTime;
    private javax.swing.JTextField trainBrand;
    private javax.swing.JTextField trainDepartureTime;
    private javax.swing.JTextField trainID;
    private javax.swing.JTextField trainNoSeat;
    // End of variables declaration//GEN-END:variables
}
